{"ast":null,"code":"var _jsxFileName = \"/Users/albertz/Desktop/EC463_mini_project/2024-mini/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ref, get, child } from 'firebase/database'; // Firebase Database functions\nimport { database } from './firebase'; // Import the initialized database instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null); // Will store the data fetched from Firebase\n  const [email, setEmail] = useState(''); // Will store the user's input\n  const [error, setError] = useState(''); // Will store any error messages\n\n  // Function to convert the email into Firebase-friendly format\n  const formatEmailForFirebase = email => {\n    return email.replace(/@/g, '-at-').replace(/\\./g, '-dot-');\n  };\n\n  // Function to fetch data when the form is submitted\n  const fetchData = async e => {\n    e.preventDefault(); // Prevent page refresh on form submission\n    setError(''); // Reset error message\n\n    try {\n      const formattedEmail = formatEmailForFirebase(email); // Convert email to Firebase-friendly format\n      const dbRef = ref(database);\n      const snapshot = await get(child(dbRef, `/${formattedEmail}`)); // Query the database\n\n      if (snapshot.exists()) {\n        const firebaseData = snapshot.val();\n        setData(Object.keys(firebaseData).map(key => ({\n          id: key,\n          ...firebaseData[key]\n        })));\n      } else {\n        setData(null); // Clear previous data\n        setError('User does not exist'); // Set error message if no data found\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Something went wrong'); // Generic error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#333'\n      },\n      children: \"Check User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetchData,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '10px'\n        },\n        children: [\"Enter email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value) // Update the email state on input change\n          ,\n          placeholder: \"Enter email address\",\n          required: true,\n          style: {\n            padding: '5px',\n            fontSize: '16px',\n            marginLeft: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '5px 10px',\n          fontSize: '16px',\n          borderRadius: '4px',\n          border: 'none',\n          backgroundColor: '#007BFF',\n          color: 'white',\n          cursor: 'pointer'\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Data for \", email, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyle,\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyle,\n              children: \"Avg Response Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyle,\n              children: \"Max Response Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyle,\n              children: \"Min Response Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyle,\n              children: \"Misses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyle,\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(entry => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: entry.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: entry.avg_response_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: entry.max_response_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: entry.min_response_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: entry.misses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: entry.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, entry.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n// Styles for table headers and cells\n_s(App, \"MMhcl0UNRcsxHCjMia5Q5eoF6vY=\");\n_c = App;\nconst tableHeaderStyle = {\n  padding: '10px',\n  borderBottom: '2px solid #ddd',\n  backgroundColor: '#f4f4f4',\n  textAlign: 'left'\n};\nconst tableCellStyle = {\n  padding: '10px',\n  borderBottom: '1px solid #ddd'\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ref","get","child","database","jsxDEV","_jsxDEV","App","_s","data","setData","email","setEmail","error","setError","formatEmailForFirebase","replace","fetchData","e","preventDefault","formattedEmail","dbRef","snapshot","exists","firebaseData","val","Object","keys","map","key","id","console","className","style","fontFamily","padding","children","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","marginRight","type","value","onChange","target","placeholder","required","fontSize","marginLeft","borderRadius","border","backgroundColor","cursor","width","borderCollapse","marginTop","tableHeaderStyle","entry","tableCellStyle","avg_response_time","max_response_time","min_response_time","misses","score","_c","borderBottom","textAlign","$RefreshReg$"],"sources":["/Users/albertz/Desktop/EC463_mini_project/2024-mini/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ref, get, child } from 'firebase/database';  // Firebase Database functions\nimport { database } from './firebase';  // Import the initialized database instance\n\nfunction App() {\n  const [data, setData] = useState(null);  // Will store the data fetched from Firebase\n  const [email, setEmail] = useState('');  // Will store the user's input\n  const [error, setError] = useState('');  // Will store any error messages\n\n  // Function to convert the email into Firebase-friendly format\n  const formatEmailForFirebase = (email) => {\n    return email.replace(/@/g, '-at-').replace(/\\./g, '-dot-');\n  };\n\n  // Function to fetch data when the form is submitted\n  const fetchData = async (e) => {\n    e.preventDefault();  // Prevent page refresh on form submission\n    setError('');  // Reset error message\n\n    try {\n      const formattedEmail = formatEmailForFirebase(email);  // Convert email to Firebase-friendly format\n      const dbRef = ref(database);\n      const snapshot = await get(child(dbRef, `/${formattedEmail}`));  // Query the database\n\n      if (snapshot.exists()) {\n        const firebaseData = snapshot.val();\n        setData(Object.keys(firebaseData).map(key => ({\n          id: key,\n          ...firebaseData[key]\n        })));\n      } else {\n        setData(null);  // Clear previous data\n        setError('User does not exist');  // Set error message if no data found\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Something went wrong');  // Generic error message\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ fontFamily: 'Arial, sans-serif', padding: '20px' }}>\n      <h1 style={{ color: '#333' }}>Check User Data</h1>\n\n      {/* Form for inputting email */}\n      <form onSubmit={fetchData} style={{ marginBottom: '20px' }}>\n        <label style={{ marginRight: '10px' }}>\n          Enter email:\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}  // Update the email state on input change\n            placeholder=\"Enter email address\"\n            required\n            style={{\n              padding: '5px',\n              fontSize: '16px',\n              marginLeft: '10px',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n            }}\n          />\n        </label>\n        <button type=\"submit\" style={{\n          padding: '5px 10px',\n          fontSize: '16px',\n          borderRadius: '4px',\n          border: 'none',\n          backgroundColor: '#007BFF',\n          color: 'white',\n          cursor: 'pointer'\n        }}>\n          Fetch Data\n        </button>\n      </form>\n\n      {/* Display error if user doesn't exist */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Display the fetched data as a table */}\n      {data && (\n        <div>\n          <h2>Data for {email}:</h2>\n          <table style={{\n            width: '100%',\n            borderCollapse: 'collapse',\n            marginTop: '10px'\n          }}>\n            <thead>\n              <tr>\n                <th style={tableHeaderStyle}>ID</th>\n                <th style={tableHeaderStyle}>Avg Response Time</th>\n                <th style={tableHeaderStyle}>Max Response Time</th>\n                <th style={tableHeaderStyle}>Min Response Time</th>\n                <th style={tableHeaderStyle}>Misses</th>\n                <th style={tableHeaderStyle}>Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((entry) => (\n                <tr key={entry.id}>\n                  <td style={tableCellStyle}>{entry.id}</td>\n                  <td style={tableCellStyle}>{entry.avg_response_time}</td>\n                  <td style={tableCellStyle}>{entry.max_response_time}</td>\n                  <td style={tableCellStyle}>{entry.min_response_time}</td>\n                  <td style={tableCellStyle}>{entry.misses}</td>\n                  <td style={tableCellStyle}>{entry.score}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Styles for table headers and cells\nconst tableHeaderStyle = {\n  padding: '10px',\n  borderBottom: '2px solid #ddd',\n  backgroundColor: '#f4f4f4',\n  textAlign: 'left',\n};\n\nconst tableCellStyle = {\n  padding: '10px',\n  borderBottom: '1px solid #ddd',\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}